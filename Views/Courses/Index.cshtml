@model IEnumerable<VirtualSchool.Models.Course>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Index";
}

<h1>Our Courses</h1>
 @if (SignInManager.IsSignedIn(User) && User.IsInRole("Enseignant"))
  {
<p>
    <a class="btn btn-primary" asp-action="Create">Create New course</a>|
        <a class="btn btn-success" asp-controller="Courses" asp-action="GetMyCourses">List Of My Courses</a>
</p>
  }
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Level)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
            <tr class="table-secondary">
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Level)
            </td>
        @if (SignInManager.IsSignedIn(User) && User.IsInRole("Enseignant"))
                {
            <td>
                <a class="btn btn-outline-success" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a class="btn btn-outline-info" asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a class="btn btn-outline-warning" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    
                    </td>
                }else
                {
                   <td>
                       <a class="btn btn-outline-info" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    </td>
                }
            </tr>
}
    </tbody>
</table>
